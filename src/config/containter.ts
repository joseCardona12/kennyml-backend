import "reflect-metadata";
import { container } from "tsyringe";
import { StatusModel, TaskModel, UserModel } from "../models";
import { TaskService } from "../services";
import AuthService from "../services/auth.service";
import TwilioService from "../services/twilio.service";
import ProductModel from "../models/product.model";
import ProductService from "../services/product.service";
import PlaceModel from "../models/place.model";
import PlaceService from "../services/place.service";
import UnitModel from "../models/unit.model";
import UnitService from "../services/unit.service";
import StatusService from "../services/status.service";
import { TaskRepository } from "../repositories";
import AuthRepository from "../repositories/auth.repository";
import ProductRepository from "../repositories/product.repository";
import PlaceRepository from "../repositories/place.repository";
import UnitRepository from "../repositories/unit.repository";
import StatusRepository from "../repositories/status.repository";

container.registerSingleton<TaskModel>(TaskModel);
container.registerSingleton<TaskService>(TaskService);
container.registerSingleton<TaskRepository>(TaskRepository);
container.registerSingleton<UserModel>(UserModel);
container.registerSingleton<AuthService>(AuthService);
container.registerSingleton<AuthRepository>(AuthRepository);
container.registerSingleton<TwilioService>(TwilioService);
container.registerSingleton<ProductModel>(ProductModel);
container.registerSingleton<ProductService>(ProductService);
container.registerSingleton<ProductRepository>(ProductRepository);
container.registerSingleton<PlaceModel>(PlaceModel);
container.registerSingleton<PlaceService>(PlaceService);
container.registerSingleton<PlaceRepository>(PlaceRepository);
container.registerSingleton<PlaceService>(PlaceService);
container.registerSingleton<UnitModel>(UnitModel);
container.registerSingleton<UnitService>(UnitService);
container.registerSingleton<UnitRepository>(UnitRepository);
container.registerSingleton<StatusModel>(StatusModel);
container.registerSingleton<StatusService>(StatusService);
container.registerSingleton<StatusRepository>(StatusRepository);
